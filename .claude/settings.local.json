{
  "permissions": {
    "allow": [
      "Read(//Users/tim/code/gh/provide-io/pyvider/src/pyvider/protocols/tfprotov6/handlers/**)",
      "Read(//Users/tim/code/gh/provide-io/pyvider-components/src/pyvider/components/functions/**)",
      "Read(//Users/tim/code/gh/provide-io/pyvider/**)",
      "Bash(uv pip install:*)",
      "Bash(pyvider install:*)",
      "Bash(terraform -chdir=docs/examples/function/add/basic validate:*)",
      "Read(//private/tmp/test-variadic/**)",
      "Bash(/Users/tim/.terraform.d/plugins/local/providers/pyvider/0.1.0/darwin_arm64/terraform-provider-pyvider --launch-context)",
      "Bash(terraform init:*)",
      "Bash(terraform plan:*)",
      "Bash(terraform validate:*)",
      "Bash(./scripts/validate_all_examples.sh:*)",
      "Bash(tee:*)",
      "Read(//private/tmp/**)",
      "Bash(timeout 30 terraform init:*)",
      "Bash(timeout 30 terraform plan:*)",
      "Bash(while ! grep -q \"Total examples\" /tmp/validation_baseline.log)",
      "Bash(do sleep 5)",
      "Bash(done)",
      "Bash(cat:*)",
      "Bash(awk:*)",
      "Bash(cut:*)",
      "Bash(pyvider components list functions:*)",
      "Bash(python3:*)",
      "Bash(/dev/null)",
      "Bash(find . -name \"main.tf\" -exec echo \"=== {} ===\" ; -exec head -20 {} ;)",
      "Bash(find docs/examples/function -type d ( -name \"utility_functions\" -o -name \"text_processing\" -o -name \"data_validation\" ) -exec rm -rf {} +)",
      "Bash(./scripts/build-docs.sh:*)",
      "Bash(src/pyvider/components/functions/collection_functions.plating/examples/data_validation.tf )",
      "Bash(src/pyvider/components/functions/string_manipulation.plating/examples/text_processing.tf )",
      "Bash(src/pyvider/components/functions/string_manipulation.plating/examples/utility_functions.tf)",
      "Read(//tmp/**)",
      "Bash(while ! grep -q \"Total examples\" /tmp/validation_round2.log)",
      "Bash(do sleep 10)",
      "Bash(do sleep 15)",
      "Bash(while ! grep -q \"Total examples\" /tmp/validation_round3.log)",
      "Bash(python -m pytest:*)",
      "Bash(while ! grep -q \"Total examples\" /tmp/validation_final.log)",
      "Bash(do sleep 20)",
      "Bash(find:*)",
      "Bash(for file in docs/examples/function/*/basic/main.tf)",
      "Bash(do)",
      "Bash(echo:*)",
      "Bash(soup stir:*)",
      "Bash(./scripts/generate_docs_and_examples.sh:*)",
      "Bash(xargs:*)",
      "Bash(if grep -q \"Total tests\" /tmp/phase1_validation.log)",
      "Bash(then tail -50 /tmp/phase1_validation.log)",
      "Bash(else echo \"Still running... Current status:\")",
      "Bash(fi)",
      "Bash(then tail -80 /tmp/phase1_validation.log)",
      "Bash(else echo \"Still running...\")",
      "Bash(while ! grep -q \"Total examples\" /tmp/phase1_validation.log)",
      "Bash(for i in {1..5})",
      "Bash(pkill -f validate_all_examples.sh)",
      "Bash(while ! grep -q \"Total tests\" /tmp/phase1_validation.log)",
      "Bash(while ! grep -q \"Total tests\" /tmp/phase2_validation.log)",
      "Bash(while ! grep -q \"Total tests\" /tmp/phase3_validation.log)",
      "Bash(while ! grep -q \"Total tests\" /tmp/final_validation.log)",
      "Bash(while ! grep -q \"Total tests\" /tmp/absolute_final_validation.log)",
      "Bash(while ! grep -q \"Total tests\" /tmp/FINAL_validation.log)",
      "Bash(if grep -q \"Total tests\" /tmp/FINAL_validation.log)",
      "Bash(then tail -80 /tmp/FINAL_validation.log)",
      "Read(///**)",
      "Bash(pkill -f \"soup stir\")",
      "Bash(pkill -f \"tail -f\")",
      "Bash(while ! grep -q \"Total tests\" /tmp/test_fixes_round1.log)",
      "Bash(while ! grep -q \"Total tests\" /tmp/test_fixes_round2.log)",
      "Bash(while ! grep -q \"Total tests\" /tmp/FINAL_FINAL_validation.log)",
      "Bash(while ! grep -q \"Total tests\" /tmp/ABSOLUTE_FINAL_validation.log)",
      "Bash(paste - -)",
      "Bash(while ! grep -q \"Total tests\" /tmp/DEBUGGING_FINAL.log)",
      "Bash(while ! grep -q \"Total tests\" /tmp/DEBUGGING_VALIDATION_SUCCESS.log)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/Users/tim/Library/Caches/flavor/workenv/terraform-provider-pyvider",
      "/Users/tim/code/gh/provide-io/tofusoup",
      "/Users/tim/code/gh/provide-io",
      "/Users/tim/.terraform.d/plugins/local/providers/pyvider",
      "/Users/tim/.terraform.d/plugins/local"
    ]
  }
}

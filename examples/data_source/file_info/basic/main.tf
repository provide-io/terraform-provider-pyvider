terraform {
  required_providers {
    pyvider = {
      source  = "local/providers/pyvider"
      version = ">= 0.0.5"
    }
  }
}

provider "pyvider" {
  # Provider configuration
  # Add your configuration options here
}

# Generated by Plating - Executable Example
# Basic file information examples

# Create test directory and files
resource "pyvider_local_directory" "test_dir" {
  path        = "/tmp/file_info_test"
  permissions = "0o755"
}

resource "pyvider_file_content" "sample_text" {
  filename = "/tmp/file_info_test/sample.txt"
  content  = "This is a sample text file."

  depends_on = [pyvider_local_directory.test_dir]
}

resource "pyvider_file_content" "config_file" {
  filename = "/tmp/file_info_test/config.json"
  content = jsonencode({
    app_name = "test-app"
    version  = "1.0.0"
  })

  depends_on = [pyvider_local_directory.test_dir]
}

# Example 1: Get information about a text file
data "pyvider_file_info" "sample" {
  path = pyvider_file_content.sample_text.filename
}

# Example 2: Get information about a JSON file
data "pyvider_file_info" "config" {
  path = pyvider_file_content.config_file.filename
}

# Example 3: Get information about a directory
data "pyvider_file_info" "directory" {
  path = pyvider_local_directory.test_dir.path
}

output "file_info_results" {
  value = {
    text_file = {
      path    = data.pyvider_file_info.sample.path
      exists  = data.pyvider_file_info.sample.exists
      size    = data.pyvider_file_info.sample.size
      is_file = data.pyvider_file_info.sample.is_file
      is_dir  = data.pyvider_file_info.sample.is_dir
    }
    json_file = {
      path   = data.pyvider_file_info.config.path
      exists = data.pyvider_file_info.config.exists
      size   = data.pyvider_file_info.config.size
    }
    directory = {
      path   = data.pyvider_file_info.directory.path
      exists = data.pyvider_file_info.directory.exists
      is_dir = data.pyvider_file_info.directory.is_dir
    }
  }
}


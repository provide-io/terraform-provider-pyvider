terraform {
  required_providers {
    pyvider = {
      source  = "local/providers/pyvider"
      version = ">= 0.0.5"
    }
  }
}

provider "pyvider" {
  # Provider configuration
  # Add your configuration options here
}

# Generated by Plating - Executable Example
# Basic JQ data source transformation examples

# Example 1: Simple field extraction
data "pyvider_lens_jq" "extract_name" {
  json_input = jsonencode({
    name  = "John Doe"
    email = "john@example.com"
    age   = 30
  })
  query = ".name"
}

# Example 2: Nested field access
data "pyvider_lens_jq" "extract_city" {
  json_input = jsonencode({
    user = {
      profile = {
        location = {
          city  = "San Francisco"
          state = "CA"
        }
      }
    }
  })
  query = ".user.profile.location.city"
}

# Example 3: Array length
data "pyvider_lens_jq" "count_items" {
  json_input = jsonencode({
    items = ["apple", "banana", "cherry"]
  })
  query = ".items | length"
}

# Example 4: Filter array
data "pyvider_lens_jq" "filter_active" {
  json_input = jsonencode([
    { name = "Alice", active = true },
    { name = "Bob", active = false },
    { name = "Carol", active = true }
  ])
  query = "[.[] | select(.active == true)]"
}

output "jq_results" {
  description = "Results from basic JQ transformations"
  value = {
    name         = data.pyvider_lens_jq.extract_name.result
    city         = data.pyvider_lens_jq.extract_city.result
    item_count   = data.pyvider_lens_jq.count_items.result
    active_users = data.pyvider_lens_jq.filter_active.result
  }
}

